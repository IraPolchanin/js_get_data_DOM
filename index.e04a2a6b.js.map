{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,EAAoB,SAAS,aAAa,CAAC,qBAC3C,EAAsB,SAAS,aAAa,CAAC,uBAG7C,EAAa,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFK,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAG/C,GAAG,CAAC,SAAC,CADR,EACe,OAAA,EAAG,WAAW,AAC1B,GAAA,GAAG,CAAC,SAAC,CAAL,EAAa,OAAA,OAAO,EAAI,OAAO,CAAC,KAAM,I,GAEnC,EACJ,EAAW,MAAM,CAAG,EAAI,EAAW,MAAM,CAAC,SAAC,CAAA,CAAG,CADhD,EACsD,OAAA,EAAI,CAAG,EAAA,GAAK,EAC5D,EACJ,EAAW,MAAM,CAAG,EAAI,KAAK,KAAK,CAAC,EAAa,EAAW,MAAM,EAAI,CAEvE,CAAA,EAAkB,WAAW,CAAG,EAAW,cAAc,CAAC,SAC1D,EAAoB,WAAW,CAAG,EAAa,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write your code here\nvar totalPopulationEl = document.querySelector(\".total-population\");\nvar averagePopulationEl = document.querySelector(\".average-population\");\nvar spanElement = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar dataValues = spanElement.map(function(el) {\n    return el.textContent;\n}).map(function(str) {\n    return Number(str.replace(/,/g, \"\"));\n});\nvar totalValue = dataValues.length > 0 ? dataValues.reduce(function(a, b) {\n    return a + b;\n}, 0) : 0;\nvar averageValue = dataValues.length > 0 ? Math.round(totalValue / dataValues.length) : 0;\ntotalPopulationEl.textContent = totalValue.toLocaleString(\"en-US\");\naveragePopulationEl.textContent = averageValue.toLocaleString(\"en-US\");\n\n//# sourceMappingURL=index.e04a2a6b.js.map\n","'use strict';\n\n// write your code here\nconst totalPopulationEl = document.querySelector('.total-population');\nconst averagePopulationEl = document.querySelector('.average-population');\nconst spanElement = [...document.querySelectorAll('.population')];\n\nconst dataValues = spanElement\n  .map((el) => el.textContent)\n  .map((str) => Number(str.replace(/,/g, '')));\n\nconst totalValue =\n  dataValues.length > 0 ? dataValues.reduce((a, b) => a + b, 0) : 0;\nconst averageValue =\n  dataValues.length > 0 ? Math.round(totalValue / dataValues.length) : 0;\n\ntotalPopulationEl.textContent = totalValue.toLocaleString('en-US');\naveragePopulationEl.textContent = averageValue.toLocaleString('en-US');\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","totalPopulationEl","document","querySelector","averagePopulationEl","dataValues","spanElement","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","el","textContent","str","Number","replace","totalValue","reduce","a","b","averageValue","Math","round","toLocaleString"],"version":3,"file":"index.e04a2a6b.js.map"}